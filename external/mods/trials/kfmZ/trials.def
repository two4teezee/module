; KFMZ TRIALS LIST ---------------------------

[TrialDef, KFM's First Trial] 				;Mandatory - [TriafDef] is required, the trial title after the comma is optional.
trial.dummymode			    = stand			;Optional - valid options are stand (default), crouch, jump, wjump. Defaults to stand if unspecified.
trial.guardmode			    = none			;Optional - valid options are none, auto. Defaults to none if unspecified.
trial.dummybuttonjam 	    = none			;Optional - valid options are none, a, b, c, x, y, z, start, d, w. Defaults to none if unspecified.

trialstep.1.text 		    = Strong Kung Fu Palm	;Optional - (string). Name for trial step (only displayed in vertical trials layout). I recommend always defining this.
trialstep.1.glyphs 		    = _QDF^Y  	            ;Optional - (string, see Glyph docs). same syntax as movelist glyphs. Glyphs are displayed in vertical and horizontal trials layouts. I recommend always defining this.

trialstep.1.stateno 		= 1010			;Mandatory - (integer or comma-separated integers). State to be checked to pass trial. This is the state whether it's the main character, a helper, or even a projectile.
trialstep.1.anim			=				;Optional - (integer or comma-separated integers). Identifies animno to be checked to pass trial. Useful in certain cases.
trialstep.1.numofhits		=				;Optional - (integer or comma-separated integers), will default to 1 if not defined. In some instances, you might want to specify a trial step to meet a multi-hit criteria before proceeding to the next trial step.
trialstep.1.isthrow 		= 				;Optional - (true or false, or comma-separated true/false), will default to false if not defined. Identifies whether the trial step is a throw. Should be 'true' is trial step is a throw.
trialstep.1.isnohit			= 				;Optional - (true or false, or comma-separated true/false), will default to false if not defined. Identifies whether the trial step does not hit the opponent, or does not increase the combo counter.
trialstep.1.iscounterhit	= 				;Optional - (true or false, or comma-separated true/false), will default to false if not defined. Identifies whether the trial step should be a counter hit. Typically does not work with helpers or projectiles.
trialstep.1.ishelper		= 				;Optional - (true or false, or comma-separated true/false), will default to false if not defined. Identifies whether the trial step is a helper. Should be 'true' is trial step is a hit from a helper.
trialstep.1.isproj			= 				;Optional - (true or false, or comma-separated true/false), will default to false if not defined. Identifies whether the trial step is a projectile. Should be 'true' is trial step is a hit from a projectile.
trialstep.1.specialbool 	=				;Optional - (true or false, or comma-separated true/false), will default to false if not defined. Can be used for custom games as required.
trialstep.1.specialvar		=				;Optional - (integer or comma-separated integers). Can be used for custom games as required.
trialstep.1.specialstr		=				;Optional - (string, or comma-separated strings). Can be used for custom games as required.

;---------------------------------------------

[TrialDef, Kung Fu Throw]
trialstep.1.text 		= Kung Fu Throw
trialstep.1.glyphs 		= [_B/_F]_+^Y
trialstep.1.stateno 	= 810
trialstep.1.isthrow		= true

;---------------------------------------------

[TrialDef, Kung Fu Taunt]
trialstep.1.text 		= Kung Fu Taunt
trialstep.1.glyphs 		= ^S
trialstep.1.stateno 	= 195
trialstep.1.isnohit		= true

;---------------------------------------------

[TrialDef, Standing Punch Chain]
trialstep.1.text 		= Standing Light Punch
trialstep.1.glyphs 		= ^X
trialstep.1.stateno 	= 200

trialstep.2.text 		= Standing Strong Punch
trialstep.2.glyphs 		= ^Y
trialstep.2.stateno 	= 210

;---------------------------------------------

[TrialDef, Condensed Standing Punch Chain]
; The next two trials show examples ofcondensed trial steps which check a series of parameters sequentially by using comma separated values. In other words, think of being able to specify multiple trial steps in a single step.
; For instance, this trial is the same as the previous, but has two steps condensed into one.
; The next trial uses a combination of condensed steps and normal steps to provide a concise trial.
; Condensed steps can be very practical for multi-state moves where the trial step should only clear if all of the states are met, without having to create multiple trial steps.

trialstep.1.text 		= Standing Light to Strong Punch Chain		
trialstep.1.glyphs 		= ^X_,^Y			; When desired, you can collapsed multiple steps into a single one but using comma separated values in the following parameters:
trialstep.1.stateno 	= 200, 210		; stateno, animno, numofhits, isthrow, iscounterhit, isnohit, ishelper, isproj, specialbool, specialvar, specialstr
trialstep.1.numofhits	= 1, 1			; If one parameter on the trial step is defined using comma separated values, all parameters on that trial step must be defined similarly.

;---------------------------------------------

[TrialDef, Kung Fu Juggle Combo]
trialstep.1.text 		= Kung Fu Knee and Extra Kick
trialstep.1.glyphs 		= _F_F_+^K_.^K
trialstep.1.stateno 	= 1060, 1055

trialstep.2.text 		= Crouching Jab
trialstep.2.glyphs 		= _D_+^X
trialstep.2.stateno 	= 400

trialstep.3.text 		= Weak Kung Fu Palm
trialstep.3.glyphs 		= _QCF_+^X
trialstep.3.stateno 	= 1000

;---------------------------------------------

[TrialDef, Kung Fu Fist Four Piece]
trialstep.1.text 		= Jumping Strong Punch
trialstep.1.glyphs 		= _AIR^Y
trialstep.1.stateno 	= 610

trialstep.2.text 		= Standing Light Punch
trialstep.2.glyphs 		= ^X
trialstep.2.stateno 	= 200

trialstep.3.text 		= Standing Strong Punch
trialstep.3.glyphs 		= ^Y
trialstep.3.stateno 	= 210

trialstep.4.text 		= Strong Kung Fu Palm
trialstep.4.glyphs 		= _QDF^Y
trialstep.4.stateno 	= 1010

;---------------------------------------------

[TrialDef, Kung Fu Super Cancel]
trialstep.1.text 		= Jumping Strong Kick
trialstep.1.glyphs 		= _AIR^B
trialstep.1.stateno 	= 640

trialstep.2.text 		= Standing Light Kick
trialstep.2.glyphs 		= ^A
trialstep.2.stateno 	= 230

trialstep.3.text 		= Standing Strong Kick
trialstep.3.glyphs 		= ^B
trialstep.3.stateno 	= 240

trialstep.4.text 		= Fast Kung Fu Zankou
trialstep.4.glyphs 		= _QDF^A^B
trialstep.4.stateno 	= 1420

trialstep.5.text 		= Triple Kung Fu Palm
trialstep.5.glyphs 		= _QDF_QDF^P
trialstep.5.stateno 	= 3000
trialstep.5.numofhits   = 3